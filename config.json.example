{
  "//": "--------------------------------------------------------------------------",
  "//": " RPC Endpoints & Chain IDs                                                ",
  "//": "--------------------------------------------------------------------------",
  "//": "Define connection details for EVM-compatible networks.",
  "//": "Replace placeholder URLs with your actual RPC provider URLs (e.g., Infura, Alchemy, QuickNode, or your own node).",
  "rpc_urls": {
    "ethereum": "YOUR_ETHEREUM_MAINNET_RPC_URL",
    "sepolia": "YOUR_SEPOLIA_TESTNET_RPC_URL",
    "polygon": "YOUR_POLYGON_MAINNET_RPC_URL",
    "polygon_mumbai": "YOUR_POLYGON_MUMBAI_TESTNET_RPC_URL",
    "bsc": "YOUR_BSC_MAINNET_RPC_URL",
    "arbitrum": "YOUR_ARBITRUM_ONE_RPC_URL",
    "optimism": "YOUR_OPTIMISM_MAINNET_RPC_URL",
    "avalanche": "YOUR_AVALANCHE_C_CHAIN_RPC_URL",
    "base": "YOUR_BASE_MAINNET_RPC_URL",
    "fantom": "YOUR_FANTOM_OPERA_RPC_URL"
  },
  "//": "Corresponding chain IDs for the networks defined above.",
  "//": "Common examples: Ethereum Mainnet (1), Sepolia Testnet (11155111), Polygon Mainnet (137), BSC Mainnet (56).",
  "chain_ids": {
    "ethereum": 1,
    "sepolia": 11155111,
    "polygon": 137,
    "polygon_mumbai": 80001,
    "bsc": 56,
    "arbitrum": 42161,
    "optimism": 10,
    "avalanche": 43114,
    "base": 8453,
    "fantom": 250
  },

  "//": "--------------------------------------------------------------------------",
  "//": " Wallet Private Key - !! CRITICAL SECURITY WARNING !!                     ",
  "//": "--------------------------------------------------------------------------",
  "//": "This field is for your wallet's private key. It provides full control over your assets.",
  "//": "  - NEVER hardcode a mainnet private key here for production systems.",
  "//": "  - PREFER using environment variables (e.g., `export EVM_PRIVATE_KEY='your_key'`) or a secure secrets vault.",
  "//": "    The scripts are designed to prioritize `EVM_PRIVATE_KEY` env var over this config value.",
  "//": "  - If used for TESTNETS, ensure this `config.json` (if created from this example)",
  "//": "    is added to your `.gitignore` file to prevent accidental commits.",
  "//": "  - You are solely responsible for the security of your private key and any funds it controls.",
  "private_key": "YOUR_PRIVATE_KEY_HERE_ONLY_FOR_A_TESTNET_WALLET_AND_NEVER_COMMIT_THIS_FILE_WITH_A_REAL_KEY",

  "//": "--------------------------------------------------------------------------",
  "//": " Decentralized Exchange (DEX) Router Addresses                          ",
  "//": "--------------------------------------------------------------------------",
  "//": "Contract addresses for DEX routers on each network.",
  "//": "These are used for executing trades. Ensure they are correct for your chosen networks/DEXs.",
  "//": "Examples are for Uniswap V2 compatible routers.",
  "dex_routers": {
    "ethereum": {"uniswap_v2": "0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D"},
    "sepolia": {"uniswap_v2": "0xC532a74256D3Db42D0Bf7a0400fEFDbad7694008"},
    "polygon": {"quickswap": "0xa5E0829CaCEd8fFDD4De3c43696c57F7D7A678ff"},
    "polygon_mumbai": {"quickswap": "0x8954AfA98594b838bda56FE4C12a09DA64D2141G"}, "bsc": {"pancakeswap_v2": "0x10ED43C718714eb63d5aA57B78B54704E256024E"},
    "arbitrum": {"sushiswap": "0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506"},
    "base": {"uniswap_v3": "0x2626664c2603336E57B271c5C0b26F421741e481"}
    // Add more DEXs and networks as needed
  },

  "//": "--------------------------------------------------------------------------",
  "//": " Token Addresses                                                          ",
  "//": "--------------------------------------------------------------------------",
  "//": "Contract addresses for common ERC20 tokens on each network.",
  "//": "  - `NATIVE` is a special keyword for the native currency (e.g., ETH, MATIC).",
  "//": "  - `WETH` (or WMATIC, WBNB, etc.) is the wrapped version of the native currency.",
  "//": "  - Verify these addresses from reliable sources (e.g., Coingecko, Etherscan).",
  "token_addresses": {
    "ethereum": {
      "NATIVE": "ETH", "WETH": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",
      "USDC": "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48", "USDT": "0xdAC17F958D2ee523a2206206994597C13D831ec7",
      "DAI": "0x6B175474E89094C44Da98b954EedeAC495271d0F", "PEPE": "0x6982508145454Ce325dDbE47a25d4ec3d2311933"
    },
    "sepolia": { // Testnet addresses will differ significantly from mainnet
      "NATIVE": "ETH",
      "WETH": "0x7b79995e5f793A07Bc00c21412e50Ea00A78R7Sp", // Example, find actual Sepolia WETH
      "UNI_TEST": "0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984" // Example UNI on Sepolia
    },
    "polygon": {
      "NATIVE": "MATIC", "WMATIC": "0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270",
      "USDC": "0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174", "USDT": "0xc2132D05D31c914a87C6611C10748AEb04B58e8F"
    },
    "polygon_mumbai": { // Testnet
      "NATIVE": "MATIC", "WMATIC": "0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889",
      "USDC_TEST": "0x0FA8781a83E46826621b3BC094Ea2A0212e71B23" // Example USDC on Mumbai
    },
    "bsc": {
      "NATIVE": "BNB", "WBNB": "0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c",
      "USDT": "0x55d398326f99059fF775485246999027B3197955", "CAKE": "0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82"
    }
    // Add other networks and their common tokens as needed
  },

  "//": "--------------------------------------------------------------------------",
  "//": " Chain Name to API-Specific ID Mapping                                  ",
  "//": "--------------------------------------------------------------------------",
  "//": "Maps user-friendly chain names (used in agent prompts/commands) to specific IDs required by APIs.",
  "chain_name_to_id_map": {
    "ethereum": {"goplus": "1", "dexscreener": "ethereum"},
    "bsc": {"goplus": "56", "dexscreener": "bsc"},
    "polygon": {"goplus": "137", "dexscreener": "polygon"},
    "arbitrum": {"goplus": "42161", "dexscreener": "arbitrum"},
    "optimism": {"goplus": "10", "dexscreener": "optimism"},
    "avalanche": {"goplus": "43114", "dexscreener": "avalanche"},
    "base": {"goplus": "8453", "dexscreener": "base"},
    "fantom": {"goplus": "250", "dexscreener": "fantom"},
    "sepolia": {"goplus": "11155111", "dexscreener": "ethereum"},
    "polygon_mumbai": {"goplus": "80001", "dexscreener": "polygon"}
    // Note: For DexScreener, testnets often use the mainnet's chain name (e.g., Sepolia uses 'ethereum').
    // GoPlus requires specific numeric IDs for testnets.
  },

  "//": "--------------------------------------------------------------------------",
  "//": " Token Analysis API Keys (Optional)                                     ",
  "//": "--------------------------------------------------------------------------",
  "token_analysis_apis": {
    "goplus_security": {
      "comment": "API Key from GoPlus Security (https://gopluslabs.io/). Required for detailed token risk analysis. Obtain from your GoPlus dashboard after signing up. The 'api_key' is used for signing requests; 'api_secret' is not currently used by the GoPlus auth method in token_analyzer.py but included for completeness or future API versions.",
      "api_key": "YOUR_GOPLUS_API_KEY_HERE",
      "api_secret": "YOUR_GOPLUS_API_SECRET_HERE_IF_PROVIDED"
    },
    "dexscreener": {
      "comment": "DexScreener API. Their public API for pair data (used in this project) currently does not strictly require an API key for basic use. This is a placeholder if their policy changes or for accessing potential premium endpoints in the future.",
      "api_key": "YOUR_DEXSCREENER_API_KEY_IF_ANY_OR_LEAVE_BLANK"
    }
    // ": "To add other analysis services like Birdeye, create a similar structure: \"birdeye\": {\"api_key\": \"YOUR_KEY\"}"
  },

  "//": "--------------------------------------------------------------------------",
  "//": " Agent Group Global Settings (Optional)                                 ",
  "//": "--------------------------------------------------------------------------",
  "default_network": "sepolia",
  "//": "Default EVM network for operations if not specified. TESTNETS (e.g., 'sepolia', 'polygon_mumbai') are STRONGLY recommended for development/testing.",
  "default_dex": "uniswap_v2",
  "//": "Default DEX for trade proposals if not specified. Ensure this key exists in 'dex_routers' for the 'default_network'.",

  "discussion_rounds_per_day": 2,
  "discussion_simulation_days": 1,
  "multisig_required_signatures": 2,
  "//": "Number of agent approvals needed for a transaction. Adjust based on number of agents (e.g., 2 for 3 agents).",
  "synopsis_max_interactions": 20,
  "//": "Max recent agent interactions included in daily synopsis prompt.",

  "websocket_host": "localhost",
  "websocket_port": 8765,
  "http_host": "localhost",
  "http_port": 8000,

  "external_api_endpoint": null,
  "//": "Optional URL to push agent interactions/summaries. Null or remove if unused.",
  "api_timeout_seconds": 15,
  "//": "Default timeout for external API calls (GoPlus, DexScreener).",
  "blockchain_read_delay_seconds": 12
  "//": "Delay after on-chain tx before reading state (e.g., balance) to allow for node sync."
}
